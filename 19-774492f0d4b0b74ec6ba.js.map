{"version":3,"sources":["webpack:///./src/apps/portraitGenerator/img/hair-face.png","webpack:///./src/apps/portraitGenerator/img/hair-back.png","webpack:///./src/apps/portraitGenerator/img/accessory-front.png","webpack:///./src/apps/portraitGenerator/img/heads.png","webpack:///./src/apps/portraitGenerator/img/eyes.png","webpack:///./src/apps/portraitGenerator/img/bodies.png","webpack:///./src/apps/portraitGenerator/img/mouths.png","webpack:///./src/apps/portraitGenerator/img/noses.png","webpack:///./src/apps/portraitGenerator/createSpriteSheet.js","webpack:///./src/apps/portraitGenerator/fetchAssets.js","webpack:///./src/apps/portraitGenerator/recolorImage.js","webpack:///./src/apps/portraitGenerator/drawPreloader.js","webpack:///./src/apps/portraitGenerator/portraitConstants.js","webpack:///./src/apps/portraitGenerator/drawPortrait.js","webpack:///./src/apps/portraitGenerator/PortraitGenerator.js","webpack:///./src/apps/portraitGenerator/img/bodies-skin.png","webpack:///./src/apps/portraitGenerator/img/hair-front.png","webpack:///./src/apps/portraitGenerator/img/accessory-back.png"],"names":["module","exports","createSpriteSheet","image","spriteWidth","spriteHeight","atlasWidth","Math","floor","width","atlasHeight","height","size","sprite","spriteId","locX","locY","buffer","document","createElement","getContext","drawImage","assets","loadImage","url","Promise","resolve","Image","addEventListener","src","fetchAssets","urls","a","length","all","map","fetched","recolorImage","color","bx","fillStyle","fillRect","globalCompositeOperation","drawLoader","context","start","Date","cW","canvas","cH","setInterval","rotation","parseInt","save","clearRect","translate","rotate","PI","i","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","greyscales","colors","r","random","pick","array","max","min","getColorPicker","drawPortrait","skinVariance","hairVariance","clothingVariance","ctx","loaderInverval","drawPreloader","require","imgHeads","imgEyes","imgNoses","imgMouths","imgHairFront","imgHairBack","imgHairFace","imgBodies","imgBodiesSkin","imgAccessoryFront","imgAccessoryBack","clearInterval","pickColor","skinColor","hairColor","clothingColor","accessoryColor","heads","eyes","noses","mouths","hairFront","hairBack","hairFace","bodies","bodiesSkin","accessoryFront","accessoryBack","hairId","bodyId","accessoryId","Canvas","styled","media","phone","GeneratorOption","div","OptionLabel","label","Portrait","state","componentDidMount","this","draw","download","toDataURL","replace","downloadLink","setAttribute","render","ref","c","Button","onClick","checked","value","onChange","event","setState","target","type","step","Component"],"mappings":"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","file":"19-774492f0d4b0b74ec6ba.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/hair-face-689c5cd5c4e660666d6e7c503bfcef70.png\";","module.exports = __webpack_public_path__ + \"static/hair-back-1aa2b6c2cd2af370e1fa208c4d5fb85d.png\";","module.exports = __webpack_public_path__ + \"static/accessory-front-e032f74a6c4b9a8b300483b53ffde18b.png\";","module.exports = __webpack_public_path__ + \"static/heads-3a4387a375a9f322af1bb17bbec3eb2e.png\";","module.exports = __webpack_public_path__ + \"static/eyes-1d403e0361ec627daed5887e6f74c0ae.png\";","module.exports = __webpack_public_path__ + \"static/bodies-ee419526cef3852e1c90d300faec2634.png\";","module.exports = __webpack_public_path__ + \"static/mouths-d4f2dbfb962cd78670c184372ed5f0c8.png\";","module.exports = __webpack_public_path__ + \"static/noses-a46f7deda35adb3a76e2f62ac3985ddb.png\";","\nconst createSpriteSheet = (image, spriteWidth, spriteHeight) => {\n    const atlasWidth = Math.floor(image.width / spriteWidth);\n    const atlasHeight = Math.floor(image.height / spriteHeight);\n\n    return {\n        image: image,\n        size: atlasWidth * atlasHeight,\n        sprite: (spriteId) => {\n            const locX = spriteId % atlasWidth;\n            const locY = Math.floor(spriteId / atlasWidth);\n\n            // create offscreen buffer,\n            const buffer = document.createElement('canvas');\n            buffer.width = spriteWidth;\n            buffer.height = spriteHeight;\n            const bx = buffer.getContext('2d');\n\n            bx.drawImage(\n                image,\n                locX * spriteWidth,\n                locY * spriteHeight,\n                spriteWidth,\n                spriteHeight,\n                0,\n                0,\n                spriteWidth,\n                spriteHeight\n            );\n\n            return buffer;\n        },\n    };\n};\n\nexport default createSpriteSheet;\n","const loadImage = (url) => new Promise((resolve) => {\n    const image = new Image();\n\n    image.addEventListener('load', () => resolve(image));\n    image.src = url;\n});\n\nlet assets;\n\nconst fetchAssets = async (urls) => {\n    if (assets && assets.length === urls.length) return assets;\n\n    const fetched = await Promise.all(urls.map(loadImage));\n\n    assets = fetched;\n\n    return assets;\n};\n\nexport default fetchAssets;\n","const recolorImage = (image, color) => {\n    // create offscreen buffer,\n    const buffer = document.createElement('canvas');\n    buffer.width = image.width;\n    buffer.height = image.height;\n    const bx = buffer.getContext('2d');\n\n    bx.fillStyle = color;\n    bx.fillRect(0, 0, buffer.width, buffer.height);\n\n    bx.globalCompositeOperation = \"multiply\";\n    bx.drawImage(image, 0, 0);\n\n    bx.globalCompositeOperation = \"destination-in\";\n    bx.drawImage(image, 0, 0);\n\n    return buffer;\n};\n\nexport default recolorImage;\n","\nconst drawLoader = (context) => {\n    const start = new Date();\n    const lines = 16;\n    const cW = context.canvas.width;\n    const cH = context.canvas.height;\n\n    const draw = () => {\n        const rotation = parseInt(((new Date() - start) / 1000) * lines) / lines;\n\n        context.save();\n        context.clearRect(0, 0, cW, cH);\n        context.translate(cW / 2, cH / 2);\n        context.rotate(Math.PI * 2 * rotation);\n\n        for (let i = 0; i < lines; i++) {\n            context.beginPath();\n            context.rotate(Math.PI * 2 / lines);\n            context.moveTo(15, 0);\n            context.lineTo(25, 0);\n            context.lineWidth = 2;\n            context.strokeStyle = `rgba(0,0,0,${i / lines})`;\n            context.stroke();\n        }\n\n        context.restore();\n    };\n\n    return setInterval(draw, 1000 / 30);\n};\n\nexport default drawLoader;\n","\nexport const greyscales = [\n    '#ffffff',\n    '#f6f6f6',\n    '#e4e4e4',\n    '#b6b6b6',\n    '#929292',\n    '#686868',\n    '#454545',\n    '#393939',\n];\n\nexport const colors = [\n    '#fbd1bf',\n    '#cb977f',\n    '#db6f56',\n    '#f0d0c8',\n    '#c19877',\n    '#956d4d',\n    '#633728',\n    '#5b3735',\n    '#eb9840',\n    '#e2deb5',\n    '#f7e1e1',\n    '#7e675f',\n    // weird colors below\n    '#eee476',\n    '#87db73',\n    '#90daef',\n    '#d37b2d',\n    '#f7738c',\n    '#e24261',\n    '#b582d6',\n    '#bab163',\n    '#a8d676',\n    '#698b98',\n    '#58666b',\n    '#66586b',\n    // greyscales\n    '#e4e4e4',\n    '#b6b6b6',\n    '#929292',\n    '#686868',\n    '#454545',\n    '#393939',\n    // more weird colors\n    '#5ff892',\n    '#5ec9c5',\n    '#fcc919',\n    '#30a4ee',\n    '#d651ee',\n    '#fa427a',\n    '#6554ce',\n    '#433b73',\n    '#683b73',\n    '#183f3a',\n    '#3e593e',\n    '#c3e0c1',\n];\n","import createSpriteSheet from './createSpriteSheet';\nimport fetchAssets from './fetchAssets';\nimport recolorImage from './recolorImage';\nimport drawPreloader from './drawPreloader';\nimport { colors, greyscales } from './portraitConstants';\n\nconst r = (size) => Math.floor(Math.random() * size);\nconst pick = (array) => (max) => array[r(Math.min(max, array.length))];\n\nconst getColorPicker = (fillStyle) => {\n    switch (fillStyle) {\n        case 'lineart':\n            return pick(['#ffffff']);\n        case 'greyscale':\n            return pick(greyscales);\n        default:\n            return pick(colors);\n    }\n};\n\nconst drawPortrait = async (canvas, skinVariance = 12, hairVariance = 24, clothingVariance = 32, fillStyle = 'colors') => {\n    const ctx = canvas.getContext('2d');\n\n    const loaderInverval = drawPreloader(ctx);\n\n    const [\n        imgHeads,\n        imgEyes,\n        imgNoses,\n        imgMouths,\n        imgHairFront,\n        imgHairBack,\n        imgHairFace,\n        imgBodies,\n        imgBodiesSkin,\n        imgAccessoryFront,\n        imgAccessoryBack,\n    ] = await fetchAssets([\n        require('./img/heads.png'),\n        require('./img/eyes.png'),\n        require('./img/noses.png'),\n        require('./img/mouths.png'),\n        require('./img/hair-front.png'),\n        require('./img/hair-back.png'),\n        require('./img/hair-face.png'),\n        require('./img/bodies.png'),\n        require('./img/bodies-skin.png'),\n        require('./img/accessory-front.png'),\n        require('./img/accessory-back.png'),\n    ]);\n\n    clearInterval(loaderInverval);\n\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    const pickColor = getColorPicker(fillStyle);\n\n    const skinColor = pickColor(skinVariance);\n    const hairColor = pickColor(hairVariance);\n    const clothingColor = pickColor(clothingVariance);\n    const accessoryColor = pickColor(clothingVariance);\n\n    const heads = createSpriteSheet(imgHeads, 512, 512);\n    const eyes = createSpriteSheet(imgEyes, 512, 512);\n    const noses = createSpriteSheet(imgNoses, 512, 512);\n    const mouths = createSpriteSheet(imgMouths, 512, 512);\n    const hairFront = createSpriteSheet(imgHairFront, 512, 512);\n    const hairBack = createSpriteSheet(imgHairBack, 512, 512);\n    const hairFace = createSpriteSheet(imgHairFace, 512, 512);\n    const bodies = createSpriteSheet(imgBodies, 512, 512);\n    const bodiesSkin = createSpriteSheet(imgBodiesSkin, 512, 512);\n    const accessoryFront = createSpriteSheet(imgAccessoryFront, 512, 512);\n    const accessoryBack = createSpriteSheet(imgAccessoryBack, 512, 512);\n\n    const hairId = r(hairFront.size);\n    const bodyId = r(bodies.size);\n    const accessoryId = r(accessoryFront.size);\n\n    ctx.drawImage(recolorImage(accessoryBack.sprite(accessoryId), accessoryColor), 0, 0);\n    ctx.drawImage(recolorImage(hairBack.sprite(hairId), hairColor), 0, 0);\n    ctx.drawImage(recolorImage(bodiesSkin.sprite(bodyId), skinColor), 0, 0);\n    ctx.drawImage(recolorImage(bodies.sprite(bodyId), clothingColor), 0, 0);\n    ctx.drawImage(recolorImage(heads.sprite(r(heads.size)), skinColor), 0, 0);\n    ctx.drawImage(mouths.sprite(r(mouths.size)), 0, 0);\n    ctx.drawImage(eyes.sprite(r(eyes.size)), 0, 0);\n    Math.random() < 0.1 && ctx.drawImage(recolorImage(hairFace.sprite(r(8)), hairColor), 0, 0);\n    ctx.drawImage(recolorImage(noses.sprite(r(noses.size)), skinColor), 0, 0);\n    ctx.drawImage(recolorImage(hairFront.sprite(hairId), hairColor), 0, 0);\n    ctx.drawImage(recolorImage(accessoryFront.sprite(accessoryId), accessoryColor), 0, 0);\n};\n\nexport default drawPortrait;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport media from '../../components/styles/media';\n\nimport drawPortrait from './drawPortrait';\nimport { colors } from './portraitConstants';\n\nimport Button from '../../components/shared/Button';\n\nconst Canvas = styled.canvas`\n    width: 512px;\n    height: 512px;\n\n    ${media.phone`\n        width: 300px;\n        height: 300px;\n    `}\n`\n\nconst GeneratorOption = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    align-items: center;\n    margin: 0.5rem 0;\n\n    ${media.phone`\n        font-size: 0.9rem;\n    `}\n`\n\nconst OptionLabel = styled.label`\n    display: inline-block;\n    width: 16rem;\n`\n\nclass Portrait extends Component {\n    state = { skinVariance: 12, hairVariance: 24, clothingVariance: colors.length, fillStyle: \"colors\" }\n\n    componentDidMount() {\n        this.draw();\n    }\n\n    draw() {\n        const { skinVariance, hairVariance, clothingVariance, fillStyle } = this.state;\n\n        drawPortrait(this.canvas, skinVariance, hairVariance, clothingVariance, fillStyle);\n    }\n\n    download() {\n        const image = this.canvas.toDataURL(\"image/png\").replace(\"image/png\", \"image/octet-stream\");\n        this.downloadLink.setAttribute(\"href\", image);\n    }\n\n    render() {\n        const { skinVariance, hairVariance, clothingVariance, fillStyle } = this.state;\n\n        return (\n            <div>\n                <Canvas ref={(c) => { this.canvas = c; }} width=\"512\" height=\"512\" />\n\n                <br /><br />\n                <p>\n                    <Button onClick={() => this.draw()}>New portrait</Button>\n                    {' '}\n                    <a ref={(c) => { this.downloadLink = c; }} download=\"portrait.png\">\n                        <Button onClick={() => this.download()}>Download</Button>\n                    </a>\n                </p>\n\n                <div>\n                    <GeneratorOption>\n                        <OptionLabel>Fill style</OptionLabel>\n                        <select checked={colors} value={fillStyle} onChange={(event) => this.setState({ fillStyle: event.target.value })}>\n                            <option value=\"colors\">Colors</option>\n                            <option value=\"greyscale\">Greyscale</option>\n                            <option value=\"lineart\">Lineart</option>\n                        </select>\n                    </GeneratorOption>\n                    {fillStyle == \"colors\" && (\n                        <>\n                            <GeneratorOption>\n                                <OptionLabel>Skin color variance</OptionLabel>\n                                <input type=\"range\" min=\"6\" max={colors.length} step=\"6\"\n                                        value={skinVariance}\n                                        onChange={(event) => this.setState({ skinVariance: parseInt(event.target.value) })} />\n                            </GeneratorOption>\n                            <GeneratorOption>\n                                <OptionLabel>Hair color variance</OptionLabel>\n                                <input type=\"range\" min=\"6\" max={colors.length} step=\"6\"\n                                        value={hairVariance}\n                                        onChange={(event) => this.setState({ hairVariance: parseInt(event.target.value) })} />\n                            </GeneratorOption>\n                            <GeneratorOption>\n                                <OptionLabel>Clothing color variance</OptionLabel>\n                                <input type=\"range\" min=\"6\" max={colors.length} step=\"6\"\n                                        value={clothingVariance}\n                                        onChange={(event) => this.setState({ clothingVariance: parseInt(event.target.value) })} />\n                            </GeneratorOption>\n                        </>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Portrait;\n","module.exports = __webpack_public_path__ + \"static/bodies-skin-637f269fc0a3fc1df5980f4ba66a9cbc.png\";","module.exports = __webpack_public_path__ + \"static/hair-front-317437961cb5b9c3d537123f0c8b418a.png\";","module.exports = __webpack_public_path__ + \"static/accessory-back-87c70fc4c5159d2fdd6d209e31f3eb53.png\";"],"sourceRoot":""}