{"version":3,"sources":["webpack:///./src/components/shared/Button.js","webpack:///./node_modules/core-js/modules/es6.regexp.to-string.js","webpack:///./node_modules/core-js/modules/_flags.js","webpack:///./node_modules/core-js/modules/es6.regexp.flags.js","webpack:///./src/apps/tableRoller/parseTable.js","webpack:///./src/apps/tableRoller/components.js","webpack:///./src/apps/AppErrorBoundry.js","webpack:///./src/apps/tableRoller/TableRoller.js"],"names":["styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_styles_reset__WEBPACK_IMPORTED_MODULE_1__","_styles_colors__WEBPACK_IMPORTED_MODULE_2__","Button","styled","button","withConfig","displayName","componentId","inputReset","colors","anObject","$flags","DESCRIPTORS","$toString","define","fn","RegExp","prototype","call","source","flags","R","this","concat","undefined","name","module","exports","that","result","global","ignoreCase","multiline","unicode","sticky","f","configurable","get","getText","node","textContent","nodeListToArray","nodeList","slice","childNodesToArray","parentContainer","childNodes","map","parseTable","tableDom","headers","querySelector","bodyRows","querySelectorAll","tableData","bodyRow","zipObject","StyledTableRoller","div","StyledButtonsContainer","RollerButton","StyledResult","StyledResultValue","StyledResultTitle","span","ErrorContainer","AppErrorBoundary","state","hasError","errorDetails","getDerivedStateFromError","error","render","_this$state","react_default","a","createElement","toString","props","children","Component","TableRollerButtons","_ref","buttons","rollResult","_ref2","i","title","fields","key","onClick","TableRollerResult","_ref3","toPairs","_ref4","value","omitMetaValues","omitBy","_","startsWith","getResult","_ref5","defultRoll","length","defaultValue","droll","roll","total","mapValues","defaultResult","indexOf","_splitColon","string","split","splitColon","dice","hasPipe","sample","splitPipe","rollField","TableRoller","results","componentDidMount","table","markerId","document","nextElementSibling","_parseTable","setState","_this$state$tableData","_this$state$headers","fieldsWithDefault","reduce","acc","header","_Object$assign","Object","assign","resultType","_this2","_this$state2","buttonsArray","JSON","parse","TableRoller_TableRollerButtons","TableRoller_TableRollerResult","__webpack_exports__","AppErrorBoundry","TableRoller_TableRoller"],"mappings":"2FAAA,IAAAA,EAAAC,EAAA,KAAAC,EAAAD,EAAA,KAAAE,EAAAF,EAAA,KAIMG,EAASC,IAAOC,OAAVC,WAAA,CAAAC,YAAA,SAAAC,YAAA,eAAGJ,CAAH,gJACNK,IAIYC,IASIA,KAIPP,wCCrBfH,EAAQ,KACR,IAAAW,EAAeX,EAAQ,IACvBY,EAAaZ,EAAQ,KACrBa,EAAkBb,EAAQ,IAE1Bc,EAAA,aAEAC,EAAA,SAAAC,GACEhB,EAAQ,GAARA,CAAqBiB,OAAAC,UAJvB,WAIuBF,GAAA,IAInBhB,EAAQ,GAARA,CAAkB,WAAe,MAAkD,QAAlDc,EAAAK,KAAA,CAAwBC,OAAA,IAAAC,MAAA,QAC7DN,EAAA,WACA,IAAAO,EAAAX,EAAAY,MACA,UAAAC,OAAAF,EAAAF,OAAA,IACA,UAAAE,IAAAD,OAAAR,GAAAS,aAAAL,OAAAL,EAAAO,KAAAG,QAAAG,KAZA,YAeCX,EAAAY,MACDX,EAAA,WACA,OAAAD,EAAAK,KAAAI,0CCpBA,IAAAZ,EAAeX,EAAQ,IACvB2B,EAAAC,QAAA,WACA,IAAAC,EAAAlB,EAAAY,MACAO,EAAA,GAMA,OALAD,EAAAE,SAAAD,GAAA,KACAD,EAAAG,aAAAF,GAAA,KACAD,EAAAI,YAAAH,GAAA,KACAD,EAAAK,UAAAJ,GAAA,KACAD,EAAAM,SAAAL,GAAA,KACAA,wBCVI9B,EAAQ,KAAgB,UAAAqB,OAAwBrB,EAAQ,IAAcoC,EAAAnB,OAAAC,UAAA,SAC1EmB,cAAA,EACAC,IAAOtC,EAAQ,6ICDTuC,EAAU,SAACC,GAAD,OAAUA,EAAKC,aACzBC,EAAkB,SAACC,GAAD,MAAc,GAAGC,MAAMzB,KAAKwB,IAE9CE,EAAoB,SAACC,GAEvB,OADYJ,EAAgBI,EAAgBC,YACjCC,IAAIT,IAYJU,EATI,SAACC,GAChB,IAAMC,EAAUN,EAAkBK,EAASE,cAAc,aACnDC,EAAWX,EAAgBQ,EAASI,iBAAiB,aAAaN,IAAIH,GAC5E,MAAO,CACHM,UACAI,UAAWF,EAASL,IAAI,SAACQ,GAAD,OAAaC,oBAAUN,EAASK,yBCZnDE,EAAoBtD,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,+CAIjBwD,EAAyBxD,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,qCAAAC,YAAA,YAAGJ,CAAH,kIAatByD,EAAezD,YAAOD,KAAVG,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,0BAIZ0D,EAAe1D,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,2BAAAC,YAAA,YAAGJ,CAAH,oEAOZ2D,EAAoB3D,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,4BAIjB4D,EAAoB5D,IAAO6D,KAAV3D,WAAA,CAAAC,YAAA,gCAAAC,YAAA,YAAGJ,CAAH,2CChCjB8D,EAAiB9D,IAAOuD,IAAVrD,WAAA,CAAAC,YAAA,kCAAAC,YAAA,YAAGJ,CAAH,0CA2BZ+D,sJArBXC,MAAQ,CAAEC,UAAU,EAAOC,aAAc,0BAElCC,kCAAyBC,GAC5B,MAAO,CAAEH,UAAU,EAAMC,aAAcE,gBAG3CC,kBAAS,IAAAC,EAC8BnD,KAAK6C,MAAhCC,EADHK,EACGL,SAAUC,EADbI,EACaJ,aAElB,OAAID,EAEIM,EAAAC,EAAAC,cAACX,EAAD,KACKI,EAAaQ,YAKnBvD,KAAKwD,MAAMC,aAlBKC,aCUzBC,EAAqB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAASC,EAAZF,EAAYE,WAAZ,OACvBV,EAAAC,EAAAC,cAACjB,EAAD,KACKwB,EAAQpC,IAAI,SAAAsC,EAAkBC,GAAlB,IAAEC,EAAFF,EAAA,GAASG,EAATH,EAAA,UACTX,EAAAC,EAAAC,cAAChB,EAAD,CAAc6B,IAAKH,EAAGI,QAAS,kBAAMN,EAAWI,KAAUD,OAKhEI,EAAoB,SAAAC,GAAA,IAAG/D,EAAH+D,EAAG/D,OAAH,OACtB6C,EAAAC,EAAAC,cAACf,EAAD,KACKgC,kBAAQhE,GACJkB,IAAI,SAAA+C,EAAeR,GAAf,IAAEG,EAAFK,EAAA,GAAOC,EAAPD,EAAA,UACLpB,EAAAC,EAAAC,cAACd,EAAD,CAAmB2B,IAAKH,GACpBZ,EAAAC,EAAAC,cAACb,EAAD,KAAoB0B,EAApB,MACAf,EAAAC,EAAAC,cAAA,YAAOmB,QAYjBC,EAAiBC,iBAAO,SAACC,EAAGT,GAAJ,OAAYU,qBAAW,KAAMV,KAuBrDW,EAAY,SAAAC,GAA2B,IAAxB/C,EAAwB+C,EAAxB/C,UAAWkC,EAAaa,EAAbb,OACtBc,EAAad,EAAO,WAAP,IAAwBlC,EAAUiD,OAC/CC,EAAelD,EAAUmD,IAAMC,KAAKJ,GAAYK,MAAQ,GAE9D,OAAOC,oBApBO,SAACC,EAAevD,GAAhB,OAA8B,SAACyC,GAC7C,GAAIc,EAAcd,GAAQ,OAAOc,EAAcd,GAE/C,GAAaA,EAbmBe,QAAQ,KAAO,EAa1B,KAAAC,EAZN,SAACC,GAAD,OAAYA,EAAOC,MAAM,KAahBC,CAAWnB,GAAxBoB,EADUJ,EAAA,GACJtB,EADIsB,EAAA,GAEXL,EAAOD,IAAMC,KAAKS,GAAMR,MAAQ,EACtC,OAAOrD,EAAUoD,GAAMjB,GAG3B,OAtBY,SAACuB,GAAD,OAAYA,EAAOF,QAAQ,KAAO,EAsB1CM,CAAQrB,GACDsB,iBAtBG,SAACL,GAAD,OAAYA,EAAOC,MAAM,KAsBrBK,CAAUvB,IAGrBU,IAAMC,KAAKX,GAAOY,OAORY,CAAUf,EAAclD,GAAlCsD,CAA8CpB,IAGnDgC,sJACFrD,MAAQ,CAAEsD,QAAS,0CAEnBC,6BACI,GAAKpG,KAAKwD,MAAM6C,MAAhB,CAEA,IAlCWC,EAkCLD,GAlCKC,EAkCatG,KAAKwD,MAAM6C,MAjCnBE,SAAS1E,cAAT,wBAA+CyE,EAA/C,MACDE,oBA6BCC,EAIe/E,EAAW2E,GAAlCzE,EAJQ6E,EAIR7E,QAASI,EAJDyE,EAICzE,UAEjBhC,KAAK0G,SAAS,CAAE9E,UAASI,kBAG7B8B,oBAAWI,GACP,IAAI,IAAAf,EACoDnD,KAAK6C,MADzD8D,EAAAxD,EACQnB,iBADR,IAAA2E,EACoB,CAAC,IADrBA,EAAAC,EAAAzD,EAC0BvB,eAD1B,IAAAgF,EACoC,GADpCA,EACwCT,EADxChD,EACwCgD,QAElCU,EAAoB3C,GAAUtC,EAAQkF,OAAO,SAACC,EAAKC,GAAN,IAAAC,EAAA,OAAAC,OAAAC,OAAA,GAAuBJ,IAAvBE,EAAA,IAA6BD,GAASA,EAAtCC,KAAiD,IAE9FG,EAAalD,EAAO,iBAAmB,UACvC3D,EAASmE,EAAeI,EAAU,CAAE9C,YAAWkC,OAAQ2C,KAG7D7G,KAAK0G,SAAS,CACVP,QAAwB,WAAfiB,EACDjB,EADClG,OAAA,CACQM,IACb,CAACA,KAEX,MAAO0C,GACLjD,KAAK0G,SAAS,CAAEzD,cAIxBC,kBAAS,IAAAmE,EAAArH,KACG6D,EAAY7D,KAAKwD,MAAjBK,QADHyD,EAEiCtH,KAAK6C,MAAxBsD,GAFdmB,EAEGtF,UAFHsF,EAEcnB,SAASlD,EAFvBqE,EAEuBrE,MAE5B,GAAIA,EAAO,OAAOG,EAAAC,EAAAC,cAACX,EAAD,KAAiBM,EAAMM,YAEzC,IAAMgE,EAAe1D,GAAW2D,KAAKC,MAAM5D,GAE3C,OACIT,EAAAC,EAAAC,cAACnB,EAAD,KACIiB,EAAAC,EAAAC,cAACoE,EAAD,CAAoB7D,QAAS0D,EAAczD,WAAY,SAACI,GAAD,OAAYmD,EAAKvD,WAAWI,MAClFiC,EAAQ1E,IAAI,SAAClB,EAAQyD,GAAT,OACTZ,EAAAC,EAAAC,cAACqE,EAAD,CAAmBxD,IAAKH,EAAGzD,OAAQA,WA5C7BmD,aAmDXkE,EAAA,iBAACpE,GAAD,OAAWJ,EAAAC,EAAAC,cAACuE,EAAD,KAAkBzE,EAAAC,EAAAC,cAACwE,EAAgBtE","file":"16-cb8ce7f39dd4f9a92788.js","sourcesContent":["import styled from 'styled-components';\nimport { inputReset } from '../styles/reset';\nimport * as colors from '../styles/colors';\n\nconst Button = styled.button`\n    ${inputReset}\n\n    padding: 0.25em 0.75em;\n    font-weight: 600;\n    background: ${colors.highlightAlt};\n    color: white;\n\n    border-radius: 3px;\n    cursor: pointer;\n\n    outline: none;\n\n    &: hover {\n        background: ${colors.highlight};\n    }\n`\n\nexport default Button;\n","'use strict';\nrequire('./es6.regexp.flags');\nvar anObject = require('./_an-object');\nvar $flags = require('./_flags');\nvar DESCRIPTORS = require('./_descriptors');\nvar TO_STRING = 'toString';\nvar $toString = /./[TO_STRING];\n\nvar define = function (fn) {\n  require('./_redefine')(RegExp.prototype, TO_STRING, fn, true);\n};\n\n// 21.2.5.14 RegExp.prototype.toString()\nif (require('./_fails')(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {\n  define(function toString() {\n    var R = anObject(this);\n    return '/'.concat(R.source, '/',\n      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);\n  });\n// FF44- RegExp#toString has a wrong name\n} else if ($toString.name != TO_STRING) {\n  define(function toString() {\n    return $toString.call(this);\n  });\n}\n","'use strict';\n// 21.2.5.3 get RegExp.prototype.flags\nvar anObject = require('./_an-object');\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","// 21.2.5.3 get RegExp.prototype.flags()\nif (require('./_descriptors') && /./g.flags != 'g') require('./_object-dp').f(RegExp.prototype, 'flags', {\n  configurable: true,\n  get: require('./_flags')\n});\n","import { zipObject } from 'lodash';\n\nconst getText = (node) => node.textContent;\nconst nodeListToArray = (nodeList) => [].slice.call(nodeList);\n\nconst childNodesToArray = (parentContainer) => {\n    const ths = nodeListToArray(parentContainer.childNodes);\n    return ths.map(getText);\n};\n\nconst parseTable = (tableDom) => {\n    const headers = childNodesToArray(tableDom.querySelector('thead tr'));\n    const bodyRows = nodeListToArray(tableDom.querySelectorAll('tbody tr')).map(childNodesToArray);\n    return {\n        headers,\n        tableData: bodyRows.map((bodyRow) => zipObject(headers, bodyRow)),\n    };\n};\n\nexport default parseTable;\n","import styled from 'styled-components';\nimport Button from '../../components/shared/Button';\n\nexport const StyledTableRoller = styled.div`\n    margin: 2rem 0;\n    border: 1px solid lightgrey;\n`\nexport const StyledButtonsContainer = styled.div`\n    position: relative;\n    padding: 0.5rem;\n\n    &:after {\n        position: absolute;\n        top: -0.35rem;\n        right: 0.8rem;\n        content: 'âš„';\n        font-size: 2rem;\n        color: grey;\n    }\n`\nexport const RollerButton = styled(Button)`\n    margin-right: 0.5rem;\n`\n\nexport const StyledResult = styled.div`\n    padding: 0.5rem;\n\n    border-top: 1px solid lightgrey;\n    background: #eee;\n`\n\nexport const StyledResultValue = styled.div`\n    margin-bottom: 0.25rem;\n`\n\nexport const StyledResultTitle = styled.span`\n    font-weight: 600;\n    margin-right: 0.25rem;\n`\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nexport const ErrorContainer = styled.div`\n    border: 1px solid red;\n    padding: 0.5rem;\n`\n\nclass AppErrorBoundary extends Component {\n    state = { hasError: false, errorDetails: null };\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true, errorDetails: error };\n    }\n\n    render() {\n        const { hasError, errorDetails } = this.state;\n\n        if (hasError) {\n            return (\n                <ErrorContainer>\n                    {errorDetails.toString()}\n                </ErrorContainer>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default AppErrorBoundary;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { toPairs, omit, mapKeys, mapValues, sample, reduce, omitBy, startsWith } from 'lodash/fp';\nimport droll from 'droll';\n\nimport parseTable from './parseTable';\n\nimport {\n    StyledTableRoller,\n    StyledButtonsContainer,\n    RollerButton,\n    StyledResult,\n    StyledResultValue,\n    StyledResultTitle,\n} from './components';\n\nimport AppErrorBoundary, { ErrorContainer } from '../AppErrorBoundry';\n\nconst TableRollerButtons = ({ buttons, rollResult }) => (\n    <StyledButtonsContainer>\n        {buttons.map(([title, fields], i) => (\n            <RollerButton key={i} onClick={() => rollResult(fields)}>{title}</RollerButton>\n        ))}\n    </StyledButtonsContainer>\n);\n\nconst TableRollerResult = ({ result }) => (\n    <StyledResult>\n        {toPairs(result)\n            .map(([key, value], i) => (\n            <StyledResultValue key={i}>\n                <StyledResultTitle>{key}: </StyledResultTitle>\n                <span>{value}</span>\n            </StyledResultValue>\n        ))}\n    </StyledResult>\n);\n\nconst hasPipe = (string) => string.indexOf('|') > 0;\nconst splitPipe = (string) => string.split('|');\n\nconst hasColon = (string) => string.indexOf(':') > 0;\nconst splitColon = (string) => string.split(':');\n\nconst omitMetaValues = omitBy((_, key) => startsWith('~~', key));\n\nconst findTable = (markerId) => {\n    const tableMarker = document.querySelector(`*[data-table-marker=\"${markerId}\"]`);\n    return tableMarker.nextElementSibling;\n};\n\nconst rollField = (defaultResult, tableData) => (value) => {\n    if (defaultResult[value]) return defaultResult[value];\n\n    if (hasColon(value)) {\n        const [dice, key] = splitColon(value);\n        const roll = droll.roll(dice).total - 1;\n        return tableData[roll][key];\n    }\n\n    if (hasPipe(value)) {\n        return sample(splitPipe(value));\n    }\n\n    return droll.roll(value).total;\n};\n\nconst getResult = ({ tableData, fields }) => {\n    const defultRoll = fields['~~roll'] || `d${tableData.length}`;\n    const defaultValue = tableData[droll.roll(defultRoll).total - 1];\n\n    return mapValues(rollField(defaultValue, tableData))(fields);\n};\n\nclass TableRoller extends Component {\n    state = { results: [] };\n\n    componentDidMount() {\n        if (!this.props.table) return;\n\n        const table = findTable(this.props.table);\n        const { headers, tableData } = parseTable(table);\n\n        this.setState({ headers, tableData });\n    }\n\n    rollResult(fields) {\n        try {\n            const { tableData = [{}], headers = [], results } = this.state;\n\n            const fieldsWithDefault = fields || headers.reduce((acc, header) => ({ ...acc, [header]: header }), {});\n\n            const resultType = fields['~~resultType'] || 'replace';\n            const result = omitMetaValues(getResult({ tableData, fields: fieldsWithDefault }));\n\n\n            this.setState({\n                results: resultType === 'append' ?\n                    [...results, result] :\n                    [result],\n            });\n        } catch (error) {\n            this.setState({ error });\n        }\n    }\n\n    render() {\n        const { buttons } = this.props;\n        const { tableData, results, error } = this.state;\n\n        if (error) return <ErrorContainer>{error.toString()}</ErrorContainer>;\n\n        const buttonsArray = buttons && JSON.parse(buttons);\n\n        return (\n            <StyledTableRoller>\n                <TableRollerButtons buttons={buttonsArray} rollResult={(fields) => this.rollResult(fields)} />\n                {results.map((result, i) => (\n                    <TableRollerResult key={i} result={result} />\n                ))}\n            </StyledTableRoller>\n        );\n    }\n}\n\nexport default (props) => <AppErrorBoundary><TableRoller {...props} /></AppErrorBoundary>;\n"],"sourceRoot":""}