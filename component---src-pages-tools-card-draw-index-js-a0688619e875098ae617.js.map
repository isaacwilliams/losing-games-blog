{"version":3,"sources":["webpack:///./src/components/shared/Button.js","webpack:///./src/apps/cardDraw/svg-cards.svg","webpack:///./src/apps/cardDraw/useDeck.js","webpack:///./src/apps/cardDraw/seedUtils.js","webpack:///./src/apps/cardDraw/CardDraw.js","webpack:///./src/pages/tools/card-draw/index.js","webpack:///./node_modules/seed-random/index.js","webpack:///./src/apps/portraitGenerator/portraitConstants.js"],"names":["Button","styled","button","inputReset","colors","module","exports","SHUFFLE_MODES","id","name","SUITE_CARDS","makeSuit","suit","map","card","CARDS","shuffleArray","random","array","shuffledCards","cards","length","pullIndex","Math","floor","pulledCards","splice","shuffleCards","seed","mode","seedRandom","shuffleQuietYear","hearts","drop","diamonds","filter","clubs","spades","indexOf","shuffleQuietYearShort","shuffleStandard","useDeck","useState","deck","setDeck","draw","setDraw","cardBack","setCardBack","drawnCard","shift","console","log","deckBackColor","ALPHA","createSeed","suffix","cardSvg","require","DrawButtonsContainer","div","ShuffuleUtils","ShuffleInput","span","DrawDeckContainer","DrawDeck","CardCountOverlay","DrawCard","DrawHistoryList","ul","DrawHistoryCard","li","CardDraw","props","window","parsed","document","location","hash","match","last","getLocationSeed","setSeed","getLocationMode","shuffleMode","setShuffleMode","useEffect","shuffleDeck","drawCard","onClick","value","onChange","e","target","key","type","className","width","height","xlinkHref","x","y","fill","viewBox","frontmatter","title","path","date","description","ToolPage","data","pool","GLOBAL","global","startdenom","pow","significance","overflow","oldRandom","ARC4","t","keylen","me","this","i","j","s","S","g","count","r","flatten","obj","depth","prop","result","typ","push","mixkey","smear","stringseed","charCodeAt","tostring","autoseed","crypto","getRandomValues","Uint8Array","Date","navigator","plugins","screen","a","String","fromCharCode","apply","options","use_entropy","entropy","arc4","arguments","n","d","resetGlobal","greyscales"],"mappings":"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","file":"component---src-pages-tools-card-draw-index-js-a0688619e875098ae617.js","sourcesContent":["import styled from 'styled-components';\nimport { inputReset } from '../styles/reset';\nimport * as colors from '../styles/colors';\n\nconst Button = styled.button`\n    ${inputReset}\n\n    padding: 0.25em 0.75em;\n    font-weight: 600;\n    background: ${colors.highlightAlt};\n    color: white;\n\n    border-radius: 3px;\n    cursor: pointer;\n\n    outline: none;\n\n    &: hover {\n        background: ${colors.highlight};\n    }\n`\n\nexport default Button;\n","module.exports = __webpack_public_path__ + \"static/svg-cards-ee03ae14955f0b10b6c060a800ccb08d.svg\";","import { useState, useEffect, useCallback } from 'react';\nimport seedRandom from 'seed-random';\nimport { drop, uniq } from 'lodash/fp';\n\nimport { colors } from '../portraitGenerator/portraitConstants';\n\nexport const SHUFFLE_MODES = [\n    { id: 'standard', name: 'Standard' },\n    { id: 'quiet-year', name: 'The Quiet Year (ordered suites)' },\n    { id: 'quiet-year-short', name: 'The Quiet Year (short game)' },\n];\n\nconst SUITE_CARDS = [\n    '1',\n    '2',\n    '3',\n    '4',\n    '5',\n    '6',\n    '7',\n    '8',\n    '9',\n    '10',\n    'jack',\n    'queen',\n    'king',\n];\n\nconst makeSuit = (suit) => SUITE_CARDS.map(card => `${suit}_${card}`);\n\nexport const CARDS = [\n    ...makeSuit('diamond'),\n    ...makeSuit('spade'),\n    ...makeSuit('heart'),\n    ...makeSuit('club'),\n];\n\nconst shuffleArray = (random, array) => {\n    let shuffledCards = [];\n    let cards = array;\n\n    while (cards.length) {\n        const pullIndex = Math.floor(random() * cards.length);\n        const pulledCards = cards.splice(pullIndex, 1);\n\n        shuffledCards = [...shuffledCards, ...pulledCards];\n    };\n\n    return shuffledCards;\n};\n\nconst shuffleStandard = (random) => (\n    shuffleArray(random, [...CARDS])\n);\n\nconst shuffleQuietYear = (random) => ([\n    ...shuffleArray(random, makeSuit('heart')),\n    ...shuffleArray(random, makeSuit('diamond')),\n    ...shuffleArray(random, makeSuit('club')),\n    ...shuffleArray(random, makeSuit('spade')),\n]);\n\nconst shuffleQuietYearShort = (random) => {\n    const hearts = drop(4, shuffleArray(random, makeSuit('heart')));\n    const diamonds = drop(3, shuffleArray(random, makeSuit('diamond')).filter(card => card !== 'diamond_king'));\n    const clubs = drop(4, shuffleArray(random, makeSuit('club')));\n    let spades = drop(4, shuffleArray(random, makeSuit('spade')));\n\n    while (spades.indexOf('spade_king') === -1) {\n        spades = drop(4, shuffleArray(random, makeSuit('spade')));\n    }\n\n    return [\n        ...hearts,\n        ...diamonds,\n        ...clubs,\n        ...spades\n    ];\n};\n\nconst shuffleCards = (seed, mode) => {\n    const random = seedRandom(seed);\n\n    switch (mode) {\n        case 'quiet-year':\n            return shuffleQuietYear(random);\n        case 'quiet-year-short':\n            return shuffleQuietYearShort(random);\n        case 'standard':\n        default:\n            return shuffleStandard(random);\n    }\n};\n\nconst deckBackColor = (seed, mode) => {\n    const random = seedRandom(`${seed}${mode}`);\n\n    return colors[Math.floor(random() * colors.length)];\n};\n\nconst useDeck = () => {\n    const [seed, setSeed] = useState();\n    const [deck, setDeck] = useState([]);\n    const [draw, setDraw] = useState([]);\n    const [cardBack, setCardBack] = useState('#000000');\n\n    const drawCard = () => {\n        const drawnCard = deck.shift();\n        if (!drawnCard) return;\n\n        setDeck([...deck]);\n        setDraw([...draw, drawnCard]);\n    };\n\n    const shuffleDeck = (seed, mode) => {\n        console.log('SHUFFLING', seed);\n        setDraw([]);\n        setDeck(shuffleCards(seed, mode));\n        setCardBack(deckBackColor(seed, mode));\n    };\n\n    return [\n        deck,\n        draw,\n        cardBack,\n        drawCard,\n        shuffleDeck,\n    ];\n};\n\nexport default useDeck;\n","\nimport { last } from 'lodash/fp';\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz';\n\nexport const createSeed = (suffix) => {\n    let seed = '';\n\n    while (seed.length < 6) {\n        seed = seed + ALPHA[Math.floor(Math.random() * ALPHA.length)];\n    }\n\n    return `${seed}`;\n};\n\nexport const getLocationSeed = () => {\n    if (typeof window !== `undefined`) {\n        const hash = window.document.location.hash;\n        const parsed = hash.match(/seed=([^&]*)/);\n        return last(parsed);\n    }\n};\n\nexport const getLocationMode = () => {\n    if (typeof window !== `undefined`) {\n        const hash = window.document.location.hash;\n        const parsed = hash.match(/mode=([^&]*)/);\n        return last(parsed);\n    }\n};\n","import React, { useState, useEffect } from 'react';\nimport { last } from 'lodash/fp';\nimport _ from 'lodash';\nimport styled from 'styled-components';\n\nimport Button from '../../components/shared/Button';\n\nimport useDeck, { CARDS, SHUFFLE_MODES } from './useDeck';\nimport {\n    createSeed,\n    getLocationSeed,\n    getLocationMode,\n} from './seedUtils';\n\nconst cardSvg = require('./svg-cards.svg');\n\nconst DrawButtonsContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    margin-bottom: 1rem;\n`;\n\nconst ShuffuleUtils = styled.div`\n    color: grey;\n    font-size: 0.9rem;\n\n    strong {\n        font-weight: bold;\n    }\n`;\n\nconst ShuffleInput = styled.span`\n    margin-left: 0.5rem;\n    margin-right: 0.5rem;\n`;\n\nconst DrawDeckContainer = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n`;\n\nconst DrawDeck = styled.div`\n    position: relative;\n    display: flex;\n\n    &.empty {\n        svg {\n            opacity: 0.2;\n        }\n    }\n`;\n\nconst CardCountOverlay = styled.div`\n    position: absolute;\n    display: flex;\n\n    align-items: center;\n    justify-content: center;\n\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    div {\n        background: white;\n        border-radius: 0.3rem;\n        padding: 0.5rem;\n        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n    }\n`;\n\nconst DrawCard = styled.div`\n    display: flex;\n`;\n\nconst DrawHistoryList = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n\n    width: 700px;\n`;\n\nconst DrawHistoryCard = styled.li`\n    margin: 0.1rem;\n    opacity: 0.2;\n\n    &.active {\n        opacity: 1;\n    }\n`;\n\nconst CardDraw = (props) => {\n    const [seed, setSeed] = useState(getLocationSeed() || createSeed());\n    const [shuffleMode, setShuffleMode] = useState(getLocationMode() || SHUFFLE_MODES[0].id);\n\n    useEffect(() => {\n        shuffleDeck(seed, shuffleMode);\n\n        if (typeof window !== `undefined`) {\n            window.document.location.hash = `seed=${seed}&mode=${shuffleMode}`;\n        }\n    }, [seed, shuffleMode]);\n\n    const [\n        deck,\n        draw,\n        deckBackColor,\n        drawCard,\n        shuffleDeck,\n    ] = useDeck();\n\n    return (\n        <div>\n            <DrawButtonsContainer>\n                <div>\n                    <div>\n                        <Button onClick={() => setSeed(createSeed())}>Shuffle</Button>\n                    </div>\n\n                    <ShuffuleUtils>\n                        Shuffle type:\n                        <ShuffleInput>\n                            <select value={shuffleMode} onChange={(e) => setShuffleMode(e.target.value)}>\n                                {SHUFFLE_MODES.map(({ id, name }) => (\n                                    <option key={id} value={id}>{name}</option>\n                                ))}\n                            </select>\n                        </ShuffleInput>\n\n                        Seed:\n                        <ShuffleInput>\n                            <input type=\"text\"\n                                    value={seed}\n                                    onChange={e => setSeed(e.target.value)} />\n                        </ShuffleInput>\n                    </ShuffuleUtils>\n                </div>\n                <Button onClick={drawCard}>Draw</Button>\n            </DrawButtonsContainer>\n\n            <DrawDeckContainer>\n                <DrawDeck className={deck.length === 0 ? 'empty' : null}>\n                    <svg width={169} height={244}>\n                        <use xlinkHref={`${cardSvg}#back`} x=\"0\" y=\"0\" fill={deckBackColor}/>}\n                    </svg>\n\n                    <CardCountOverlay>\n                        <div>\n                            {deck.length} {deck.length === 1 ? 'card' : 'cards'}\n                        </div>\n                    </CardCountOverlay>\n                </DrawDeck>\n\n                <DrawCard>\n                    {last(draw) && (\n                        <svg width={169} height={244}>\n                            <use xlinkHref={`${cardSvg}#${last(draw)}`} x=\"0\" y=\"0\"/>\n                        </svg>\n                    )}\n                </DrawCard>\n            </DrawDeckContainer>\n\n\n            <div>\n                <DrawHistoryList>\n                    {CARDS.map((card) => (\n                        <DrawHistoryCard key={card}\n                                className={draw.indexOf(card) > -1 ? 'active' : null}>\n                            <svg width={'3rem'} height={'3.5rem'} viewBox=\"0 0 169 244\">\n                                <use xlinkHref={`${cardSvg}#${card}`} x=\"0\" y=\"0\" />\n                            </svg>\n                        </DrawHistoryCard>\n                    ))}\n                </DrawHistoryList>\n            </div>\n        </div>\n    );\n};\n\nexport default CardDraw;\n","import React from 'react';\nimport ToolPage from '../../../templates/ToolPage';\nimport CardDraw from '../../../apps/cardDraw/CardDraw';\n\nexport const frontmatter = {\n    title: 'Card draw',\n    path: '/tools/card-draw',\n    date: '2020-04-25',\n    description: 'Draw from a deck of playing cards, with a seeded randomiser',\n}\n\nexport default () => (\n    <ToolPage data={frontmatter}>\n        <CardDraw />\n    </ToolPage>\n);\n","'use strict';\n\nrequire(\"core-js/modules/es6.typed.uint8-array\");\n\nvar width = 256; // each RC4 output is 0 <= x < 256\n\nvar chunks = 6; // at least six RC4 outputs for each double\n\nvar digits = 52; // there are 52 significant digits in a double\n\nvar pool = []; // pool: entropy pool starts empty\n\nvar GLOBAL = typeof global === 'undefined' ? window : global; //\n// The following constants are related to IEEE 754 limits.\n//\n\nvar startdenom = Math.pow(width, chunks),\n    significance = Math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1;\nvar oldRandom = Math.random; //\n// seedrandom()\n// This is the seedrandom function described above.\n//\n\nmodule.exports = function (seed, options) {\n  if (options && options.global === true) {\n    options.global = false;\n    Math.random = module.exports(seed, options);\n    options.global = true;\n    return Math.random;\n  }\n\n  var use_entropy = options && options.entropy || false;\n  var key = []; // Flatten the seed string or build one from local entropy if needed.\n\n  var shortseed = mixkey(flatten(use_entropy ? [seed, tostring(pool)] : 0 in arguments ? seed : autoseed(), 3), key); // Use the seed to initialize an ARC4 generator.\n\n  var arc4 = new ARC4(key); // Mix the randomness into accumulated entropy.\n\n  mixkey(tostring(arc4.S), pool); // Override Math.random\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n\n  return function () {\n    // Closure to return a random double:\n    var n = arc4.g(chunks),\n        // Start with a numerator n < 2 ^ 48\n    d = startdenom,\n        //   and denominator d = 2 ^ 48.\n    x = 0; //   and no 'extra last byte'.\n\n    while (n < significance) {\n      // Fill up all significant digits by\n      n = (n + x) * width; //   shifting numerator and\n\n      d *= width; //   denominator and generating a\n\n      x = arc4.g(1); //   new least-significant-byte.\n    }\n\n    while (n >= overflow) {\n      // To avoid rounding up, before adding\n      n /= 2; //   last byte, shift everything\n\n      d /= 2; //   right using integer Math until\n\n      x >>>= 1; //   we have exactly the desired bits.\n    }\n\n    return (n + x) / d; // Form the number within [0, 1).\n  };\n};\n\nmodule.exports.resetGlobal = function () {\n  Math.random = oldRandom;\n}; //\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\n\n/** @constructor */\n\n\nfunction ARC4(key) {\n  var t,\n      keylen = key.length,\n      me = this,\n      i = 0,\n      j = me.i = me.j = 0,\n      s = me.S = []; // The empty key [] is treated as [0].\n\n  if (!keylen) {\n    key = [keylen++];\n  } // Set up S using the standard key scheduling algorithm.\n\n\n  while (i < width) {\n    s[i] = i++;\n  }\n\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & j + key[i % keylen] + (t = s[i])];\n    s[j] = t;\n  } // The \"g\" method returns the next (count) outputs as one number.\n\n\n  (me.g = function (count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t,\n        r = 0,\n        i = me.i,\n        j = me.j,\n        s = me.S;\n\n    while (count--) {\n      t = s[i = mask & i + 1];\n      r = r * width + s[mask & (s[i] = s[j = mask & j + t]) + (s[j] = t)];\n    }\n\n    me.i = i;\n    me.j = j;\n    return r; // For robust unpredictability discard an initial batch of values.\n    // See http://www.rsa.com/rsalabs/node.asp?id=2009\n  })(width);\n} //\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\n\n\nfunction flatten(obj, depth) {\n  var result = [],\n      typ = (typeof obj)[0],\n      prop;\n\n  if (depth && typ == 'o') {\n    for (prop in obj) {\n      try {\n        result.push(flatten(obj[prop], depth - 1));\n      } catch (e) {}\n    }\n  }\n\n  return result.length ? result : typ == 's' ? obj : obj + '\\0';\n} //\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\n\n\nfunction mixkey(seed, key) {\n  var stringseed = seed + '',\n      smear,\n      j = 0;\n\n  while (j < stringseed.length) {\n    key[mask & j] = mask & (smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++);\n  }\n\n  return tostring(key);\n} //\n// autoseed()\n// Returns an object for autoseeding, using window.crypto if available.\n//\n\n/** @param {Uint8Array=} seed */\n\n\nfunction autoseed(seed) {\n  try {\n    GLOBAL.crypto.getRandomValues(seed = new Uint8Array(width));\n    return tostring(seed);\n  } catch (e) {\n    return [+new Date(), GLOBAL, GLOBAL.navigator && GLOBAL.navigator.plugins, GLOBAL.screen, tostring(pool)];\n  }\n} //\n// tostring()\n// Converts an array of charcodes to a string\n//\n\n\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n} //\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to intefere with determinstic PRNG state later,\n// seedrandom will not call Math.random on its own again after\n// initialization.\n//\n\n\nmixkey(Math.random(), pool);","\nexport const greyscales = [\n    '#ffffff',\n    '#f6f6f6',\n    '#e4e4e4',\n    '#b6b6b6',\n    '#929292',\n    '#686868',\n    '#454545',\n    '#393939',\n];\n\nexport const colors = [\n    '#fbd1bf',\n    '#cb977f',\n    '#db6f56',\n    '#f0d0c8',\n    '#c19877',\n    '#956d4d',\n    '#633728',\n    '#5b3735',\n    '#eb9840',\n    '#e2deb5',\n    '#f7e1e1',\n    '#7e675f',\n    // weird colors below\n    '#eee476',\n    '#87db73',\n    '#90daef',\n    '#d37b2d',\n    '#f7738c',\n    '#e24261',\n    '#b582d6',\n    '#bab163',\n    '#a8d676',\n    '#698b98',\n    '#58666b',\n    '#66586b',\n    // greyscales\n    '#e4e4e4',\n    '#b6b6b6',\n    '#929292',\n    '#686868',\n    '#454545',\n    '#393939',\n    // more weird colors\n    '#5ff892',\n    '#5ec9c5',\n    '#fcc919',\n    '#30a4ee',\n    '#d651ee',\n    '#fa427a',\n    '#6554ce',\n    '#433b73',\n    '#683b73',\n    '#183f3a',\n    '#3e593e',\n    '#c3e0c1',\n];\n"],"sourceRoot":""}