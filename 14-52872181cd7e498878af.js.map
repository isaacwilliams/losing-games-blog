{"version":3,"sources":["webpack:///./src/components/shared/Button.js","webpack:///./src/apps/tableRoller/parseTable.js","webpack:///./src/apps/tableRoller/components.js","webpack:///./src/apps/AppErrorBoundry.js","webpack:///./src/apps/tableRoller/TableRoller.js"],"names":["styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_styles_reset__WEBPACK_IMPORTED_MODULE_1__","_styles_colors__WEBPACK_IMPORTED_MODULE_2__","Button","styled","button","withConfig","displayName","componentId","inputReset","colors","getText","node","textContent","nodeListToArray","nodeList","slice","call","childNodesToArray","parentContainer","childNodes","map","parseTable","tableDom","headers","querySelector","bodyRows","querySelectorAll","tableData","bodyRow","zipObject","StyledTableRoller","div","StyledButtonsContainer","RollerButton","StyledResult","StyledResultValue","StyledResultTitle","span","ErrorContainer","AppErrorBoundary","state","hasError","errorDetails","getDerivedStateFromError","error","render","_this$state","this","react_default","a","createElement","toString","props","children","Component","TableRollerButtons","_ref","buttons","rollResult","_ref2","i","title","fields","key","onClick","TableRollerResult","_ref3","result","toPairs","_ref4","value","omitMetaValues","omitBy","_","startsWith","getResult","_ref5","defultRoll","length","defaultValue","droll","roll","total","mapValues","defaultResult","indexOf","_splitColon","string","split","splitColon","dice","hasPipe","sample","splitPipe","rollField","TableRoller","results","componentDidMount","table","markerId","document","nextElementSibling","_parseTable","setState","_this$state$tableData","_this$state$headers","fieldsWithDefault","reduce","acc","header","_Object$assign","Object","assign","resultType","concat","_this2","_this$state2","buttonsArray","JSON","parse","TableRoller_TableRollerButtons","TableRoller_TableRollerResult","__webpack_exports__","AppErrorBoundry","TableRoller_TableRoller"],"mappings":"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","file":"14-52872181cd7e498878af.js","sourcesContent":["import styled from 'styled-components';\nimport { inputReset } from '../styles/reset';\nimport * as colors from '../styles/colors';\n\nconst Button = styled.button`\n    ${inputReset}\n\n    padding: 0.25em 0.75em;\n    font-weight: 600;\n    background: ${colors.highlightAlt};\n    color: white;\n\n    border-radius: 3px;\n    cursor: pointer;\n\n    outline: none;\n\n    &: hover {\n        background: ${colors.highlight};\n    }\n`\n\nexport default Button;\n","import { zipObject } from 'lodash';\n\nconst getText = (node) => node.textContent;\nconst nodeListToArray = (nodeList) => [].slice.call(nodeList);\n\nconst childNodesToArray = (parentContainer) => {\n    const ths = nodeListToArray(parentContainer.childNodes);\n    return ths.map(getText);\n};\n\nconst parseTable = (tableDom) => {\n    const headers = childNodesToArray(tableDom.querySelector('thead tr'));\n    const bodyRows = nodeListToArray(tableDom.querySelectorAll('tbody tr')).map(childNodesToArray);\n    return {\n        headers,\n        tableData: bodyRows.map((bodyRow) => zipObject(headers, bodyRow)),\n    };\n};\n\nexport default parseTable;\n","import styled from 'styled-components';\nimport Button from '../../components/shared/Button';\n\nexport const StyledTableRoller = styled.div`\n    margin: 2rem 0;\n    border: 1px solid lightgrey;\n`\nexport const StyledButtonsContainer = styled.div`\n    position: relative;\n    padding: 0.5rem;\n\n    &:after {\n        position: absolute;\n        top: -0.35rem;\n        right: 0.8rem;\n        content: 'âš„';\n        font-size: 2rem;\n        color: grey;\n    }\n`\nexport const RollerButton = styled(Button)`\n    margin-right: 0.5rem;\n`\n\nexport const StyledResult = styled.div`\n    padding: 0.5rem;\n\n    border-top: 1px solid lightgrey;\n    background: #eee;\n`\n\nexport const StyledResultValue = styled.div`\n    margin-bottom: 0.25rem;\n`\n\nexport const StyledResultTitle = styled.span`\n    font-weight: 600;\n    margin-right: 0.25rem;\n`\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\n\nexport const ErrorContainer = styled.div`\n    border: 1px solid red;\n    padding: 0.5rem;\n`\n\nclass AppErrorBoundary extends Component {\n    state = { hasError: false, errorDetails: null };\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true, errorDetails: error };\n    }\n\n    render() {\n        const { hasError, errorDetails } = this.state;\n\n        if (hasError) {\n            return (\n                <ErrorContainer>\n                    {errorDetails.toString()}\n                </ErrorContainer>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default AppErrorBoundary;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { toPairs, omit, mapKeys, mapValues, sample, reduce, omitBy, startsWith } from 'lodash/fp';\nimport droll from 'droll';\n\nimport parseTable from './parseTable';\n\nimport {\n    StyledTableRoller,\n    StyledButtonsContainer,\n    RollerButton,\n    StyledResult,\n    StyledResultValue,\n    StyledResultTitle,\n} from './components';\n\nimport AppErrorBoundary, { ErrorContainer } from '../AppErrorBoundry';\n\nconst TableRollerButtons = ({ buttons, rollResult }) => (\n    <StyledButtonsContainer>\n        {buttons.map(([title, fields], i) => (\n            <RollerButton key={i} onClick={() => rollResult(fields)}>{title}</RollerButton>\n        ))}\n    </StyledButtonsContainer>\n);\n\nconst TableRollerResult = ({ result }) => (\n    <StyledResult>\n        {toPairs(result)\n            .map(([key, value], i) => (\n            <StyledResultValue key={i}>\n                <StyledResultTitle>{key}: </StyledResultTitle>\n                <span>{value}</span>\n            </StyledResultValue>\n        ))}\n    </StyledResult>\n);\n\nconst hasPipe = (string) => string.indexOf('|') > 0;\nconst splitPipe = (string) => string.split('|');\n\nconst hasColon = (string) => string.indexOf(':') > 0;\nconst splitColon = (string) => string.split(':');\n\nconst omitMetaValues = omitBy((_, key) => startsWith('~~', key));\n\nconst findTable = (markerId) => {\n    const tableMarker = document.querySelector(`*[data-table-marker=\"${markerId}\"]`);\n    return tableMarker.nextElementSibling;\n};\n\nconst rollField = (defaultResult, tableData) => (value) => {\n    if (defaultResult[value]) return defaultResult[value];\n\n    if (hasColon(value)) {\n        const [dice, key] = splitColon(value);\n        const roll = droll.roll(dice).total - 1;\n        return tableData[roll][key];\n    }\n\n    if (hasPipe(value)) {\n        return sample(splitPipe(value));\n    }\n\n    return droll.roll(value).total;\n};\n\nconst getResult = ({ tableData, fields }) => {\n    const defultRoll = fields['~~roll'] || `d${tableData.length}`;\n    const defaultValue = tableData[droll.roll(defultRoll).total - 1];\n\n    return mapValues(rollField(defaultValue, tableData))(fields);\n};\n\nclass TableRoller extends Component {\n    state = { results: [] };\n\n    componentDidMount() {\n        if (!this.props.table) return;\n\n        const table = findTable(this.props.table);\n        const { headers, tableData } = parseTable(table);\n\n        this.setState({ headers, tableData });\n    }\n\n    rollResult(fields) {\n        try {\n            const { tableData = [{}], headers = [], results } = this.state;\n\n            const fieldsWithDefault = fields || headers.reduce((acc, header) => ({ ...acc, [header]: header }), {});\n\n            const resultType = fields['~~resultType'] || 'replace';\n            const result = omitMetaValues(getResult({ tableData, fields: fieldsWithDefault }));\n\n\n            this.setState({\n                results: resultType === 'append' ?\n                    [...results, result] :\n                    [result],\n            });\n        } catch (error) {\n            this.setState({ error });\n        }\n    }\n\n    render() {\n        const { buttons } = this.props;\n        const { tableData, results, error } = this.state;\n\n        if (error) return <ErrorContainer>{error.toString()}</ErrorContainer>;\n\n        const buttonsArray = buttons && JSON.parse(buttons);\n\n        return (\n            <StyledTableRoller>\n                <TableRollerButtons buttons={buttonsArray} rollResult={(fields) => this.rollResult(fields)} />\n                {results.map((result, i) => (\n                    <TableRollerResult key={i} result={result} />\n                ))}\n            </StyledTableRoller>\n        );\n    }\n}\n\nexport default (props) => <AppErrorBoundary><TableRoller {...props} /></AppErrorBoundary>;\n"],"sourceRoot":""}